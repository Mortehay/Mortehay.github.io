<?php
//ini_set('display_errors', 1);
include('classFunctionStorage.php');
if ($_POST['ctv_city_nod_eng']) {
  $selectedCity= $_POST['ctv_city_nod_eng'];
} else {
  $selectedCity = $_REQUEST['ctv_city_nod_eng'];
}
$newDBrequest = new dbConnSetClass;
//----NOD coverage zones----------------------------------------------------------
$query = "CREATE TEMP TABLE temp AS SELECT cubic_lname, cubic_ladress,  array_agg(cubic_house_id) as  agg_cubic_house_id, ST_ConvexHull(ST_union(ST_makevalid(building_geom))) as beauty_geom, sum(cubic_cnt::integer) as cubic_cnt, sum(cubic_cnt_docsis::integer) as cubic_cnt_docsis, sum(cubic_cnt_ktv::integer) as cubic_cnt_ktv, sum(cubic_cnt_atv::integer) as cubic_cnt_atv, sum(cubic_cnt_vbb::integer) as cubic_cnt_vbb, sum(cubic_cnt_eth::integer) as cubic_cnt_eth, sum(cubic_cnt_active_contr::integer) as cubic_cnt_active_contr from (select distinct on (cubic_house_id) * from ".$selectedCity.".".$selectedCity."_buildings ) as city where cubic_lname not in('не опр') group by cubic_lname, cubic_ladress order by cubic_cnt desc; DELETE FROM ".$selectedCity.".".$selectedCity."_nod_coverage;INSERT INTO ".$selectedCity.".".$selectedCity."_nod_coverage(cubic_lname, cubic_ladress, cubic_cnt, cubic_cnt_docsis, cubic_cnt_ktv, cubic_cnt_atv, cubic_cnt_vbb, cubic_cnt_eth, cubic_cnt_active_contr, beauty_geom) SELECT cubic_lname, cubic_ladress, cubic_cnt, cubic_cnt_docsis, cubic_cnt_ktv, cubic_cnt_atv, cubic_cnt_vbb, cubic_cnt_eth, cubic_cnt_active_contr, beauty_geom from temp; ";	
$retuenedArray = $newDBrequest -> dbConnect($query, false, true);
echo $query;
//----return path coverage zones----------------------------------------------------------
$query = "create temp table tmp as( WITH RECURSIVE included_parts(cubic_code, cubic_ou_code, cubic_name, cubic_house_id) AS (SELECT cubic_code, cubic_ou_code, cubic_name, cubic_house_id FROM ".$selectedCity.".".$selectedCity."_ctv_topology WHERE cubic_name in( 'Порт ОК', 'Ответвитель магистральный','Распределительный стояк', 'Магистральный узел','Домовой узел') UNION SELECT p.cubic_code, p.cubic_ou_code, p.cubic_name, pr.cubic_house_id FROM included_parts pr, ".$selectedCity.".".$selectedCity."_ctv_topology p WHERE p.cubic_code = pr.cubic_ou_code ) SELECT i_p.cubic_name, i_p.cubic_code, i_p.cubic_ou_code, i_p.cubic_house_id as houses, case when city.cubic_cnt_docsis is null then 0 else city.cubic_cnt_docsis::int8 end as cubic_cnt_docsis, case when city.cubic_cnt is null then 0 else city.cubic_cnt::int8 end as cubic_cnt, case when city.cubic_cnt_atv is null then 0 else city.cubic_cnt_atv::int8 end as cubic_cnt_atv, case when city.cubic_cnt_ktv is null then 0 else city.cubic_cnt_ktv::int8 end as cubic_cnt_ktv, case when city.cubic_cnt_vbb is null then 0 else city.cubic_cnt_vbb::int8 end as cubic_cnt_vbb, case when city.cubic_cnt_active_contr is null then 0 else city.cubic_cnt_active_contr::int8 end as cubic_cnt_active_contr, case when city.cubic_cnt_eth is null then 0 else city.cubic_cnt_eth::int8 end as cubic_cnt_eth, i_p.cubic_house_id as house_count, city.building_geom FROM included_parts i_p right join ".$selectedCity.".".$selectedCity."_buildings city on(i_p.cubic_house_id = city.cubic_house_id) right join ".$selectedCity.".".$selectedCity."_ctv_topology equipment on(equipment.cubic_code = i_p.cubic_code) where i_p.cubic_name in ('Порт ОК') );  create temp table nod as select cubic_code, cubic_name, cubic_coment from ".$selectedCity.".".$selectedCity."_ctv_topology where cubic_name = 'Оптический узел'; create temp table tmp_fixed as select tmp.cubic_name, tmp.cubic_code, tmp.cubic_ou_code, array_agg(tmp.houses) as houses, sum(tmp.cubic_cnt_docsis::int8) as cubic_cnt_docsis, sum(tmp.cubic_cnt::int8) as cubic_cnt, sum(tmp.cubic_cnt_ktv::int8) as cubic_cnt_ktv, sum(tmp.cubic_cnt_atv::int8) as cubic_cnt_atv, sum(tmp.cubic_cnt_active_contr::int8) as cubic_cnt_active_contr, sum(tmp.cubic_cnt_vbb::int8) as cubic_cnt_vbb, sum(tmp.cubic_cnt_eth::int8) as cubic_cnt_eth, ST_ConvexHull(ST_union(ST_makevalid(tmp.building_geom))) as beauty_geom, nod.cubic_coment from tmp  right join nod on(tmp.cubic_ou_code = nod.cubic_code) group by tmp.cubic_name, tmp.cubic_code, tmp.cubic_ou_code, nod.cubic_coment; DELETE FROM ".$selectedCity.".".$selectedCity."_rp_coverage; INSERT INTO ".$selectedCity.".".$selectedCity."_rp_coverage(cubic_code, cubic_cnt_docsis, cubic_cnt,	cubic_cnt_ktv,	cubic_cnt_atv,	cubic_cnt_active_contr,	cubic_cnt_vbb,	cubic_cnt_eth, beauty_geom, cubic_coment) SELECT cubic_code, cubic_cnt_docsis,	cubic_cnt,	cubic_cnt_ktv,	cubic_cnt_atv,	cubic_cnt_active_contr,	cubic_cnt_vbb,	cubic_cnt_eth, beauty_geom, cubic_coment from tmp_fixed;";	
$retuenedArray = $newDBrequest -> dbConnect($query, false, true);
echo $query;
?>

